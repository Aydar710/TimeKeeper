// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    /*ext.kotlin_version = '1.3.21'*/
    ext {
        // App version
        versionName = '1.0.0'
        versionCode = 1

        // SDK and tools
        compileSdkVersion = 28
        minSdkVersion = 21
        targetSdkVersion = 28

        kotlinVersion = '1.3.21'

        appCompatVersion = '1.0.2'
        supportVersion = '28.0.0'
        constraintVersion = '1.1.3'

        rxKotlinVersion = '2.3.0'
        rxAndroidVersion = '2.1.0'

        daggerVersion = '2.16'
        javaxInjectVersion = '1'

        architectureComponentVersion = '2.0.0'

        retrofitVersion = '2.4.0'
        okhttpVersion = '3.8.0'
        gsonVersion = '2.8.2'

        junitVersion = '4.12'
        mockitoVersion = '2.23.0'

        espressoRunnerVersion = '1.0.2'
        espressoCoreVersion = '3.0.2'

        glideVersion = '4.8.0'

        stephoVersion = '1.4.2'

        vkApiVersion = '2.0.0'

        androidDeps = [
                cardView        : "com.android.support:cardview-v7:$supportVersion",
                recyclerView    : "com.android.support:recyclerview-v7:$supportVersion",
                constraintLayout: "com.android.support.constraint:constraint-layout:$constraintVersion",
                rxAndroid       : "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",
                //material        : "com.google.android.material:material:$supportVersion",
                glide           : "com.github.bumptech.glide:glide:$glideVersion",
                supportDesign   : "com.android.support:design:$supportVersion"
        ]

        kotlinDeps = [
                kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
        ]

        rxDeps = [
                rxKotlin: "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion",
        ]

        daggerDeps = [
                dagger2: "com.google.dagger:dagger-android:$daggerVersion",
                inject : "javax.inject:javax.inject:$javaxInjectVersion"
        ]

        daggerKapt = [
                compiler : "com.google.dagger:dagger-compiler:$daggerVersion",
                processor: "com.google.dagger:dagger-android-processor:$daggerVersion"
        ]

        //Add lifecycle dependencies

        networkDeps = [
                retrofit     : "com.squareup.retrofit2:retrofit:$retrofitVersion",
                rxAdapter    : "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion",
                gsonConverter: "com.squareup.retrofit2:converter-gson:$retrofitVersion",
                gson         : "com.google.code.gson:gson:$gsonVersion",
                okHttp       : "com.squareup.okhttp3:okhttp:$okhttpVersion",
                logging      : "com.squareup.okhttp3:logging-interceptor:$okhttpVersion",
                stepho       : "com.facebook.stetho:stetho:$stephoVersion",
                stephoOkHttp : "com.facebook.stetho:stetho-okhttp3:$stephoVersion"
        ]

        unitTestsDeps = [
                jUnit  : "junit:junit:$junitVersion",
                mockito: "org.mockito:mockito-inline:$mockitoVersion"
        ]

        espressoDeps = [
                runner: "com.android.support.bottom_navigation_item_background_colors:runner:$espressoRunnerVersion",
                core  : "com.android.support.bottom_navigation_item_background_colors.espresso:espresso-core:$espressoCoreVersion"
        ]

        vkDeps = [
                vkApi: "com.vk:androidsdk:$vkApiVersion"
        ]
    }

    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.google.gms:google-services:4.2.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0-RC12"
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
